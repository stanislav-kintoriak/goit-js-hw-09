{"mappings":"qhBAEA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAvCbQ,KAAOC,SAASC,cAAc,SAC9BC,WAAaF,SAASC,cAAc,oBACpCE,UAAYH,SAASC,cAAc,mBACnCG,YAAcJ,SAASC,cAAc,qBAIrCF,KAAKM,iBAAiB,UAAUC,IAC9BA,EAAIC,iBAEJ,IAAIC,EAAOC,OAAOP,WAAWQ,OAE7B,IAAK,IAAIC,EAAI,EAAGA,GAAKF,OAAOL,YAAYM,OAAQC,GAAK,EACnDtB,EAAcsB,EAAGH,GACdI,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,MACjBsB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBzB,QAAiBC,MAAU,IAInDyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBsB,EAAA1B,GAAS2B,OAAOG,QACd,sBAAoB3B,QAAeC,MAAU,IAInDiB,GAAQC,OAAON,UAAUO,M","sources":["src/js/03-promises.js"],"sourcesContent":["// import\n\nimport Notiflix from 'notiflix';\n\n// refs\n\nform = document.querySelector('.form');\ninputDelay = document.querySelector('[name = \"delay\"]');\ninputStep = document.querySelector('[name = \"step\"]');\ninputAmount = document.querySelector('[name = \"amount\"]');\n\n// add event listener\n\nform.addEventListener('submit', evt => {\n  evt.preventDefault();\n\n  let step = Number(inputDelay.value);\n\n  for (let i = 1; i <= Number(inputAmount.value); i += 1) {\n    createPromise(i, step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    step += Number(inputStep.value);\n  }\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","inputDelay","inputStep","inputAmount","addEventListener","evt","preventDefault","step","Number","value","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.b8aa1689.js.map"}